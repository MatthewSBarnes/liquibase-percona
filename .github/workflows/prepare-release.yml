name: Prepare Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (defaults to liquibase-core)'
        required: false
        default: ''

jobs:
  prepare:
    name: Prepare Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: 'maven'

      - id: determine_version
        name: Determine Version for Next Release
        shell: bash
        run: |
          INPUT_VERSION=${{ github.event.inputs.version }}
          DEFAULT_VERSION=$(./mvnw -B -q org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate -Dexpression=liquibase.version -DforceStdout)
          echo "::set-output name=version::${INPUT_VERSION:-$DEFAULT_VERSION}"

      - name: Configure git user
        run: |
          git config user.name "liquibot"
          git config user.email "liquibot@liquibase.org"

      - name: Bump POM Version for Next Release
        shell: bash
        run: |
          ./mvnw -B versions:set -DnewVersion=$VERSION
          sed -i "s/project.build.outputTimestamp>[^<]\+</project.build.outputTimestamp>$(date -u -Iseconds)</" pom.xml
          git add pom.xml
          git commit -m "Version Bumped to $VERSION"
          git tag -a -m "Version Bumped to $VERSION" liquibase-percona-$VERSION
          git push origin HEAD:$GITHUB_REF --follow-tags --tags
        env:
          VERSION: ${{ steps.determine_version.outputs.version }}

      - name: Bump POM Version for Development
        shell: bash
        run: |
          ./mvnw -B versions:set -DnextSnapshot=true
          git add pom.xml
          git commit -m "Version Bumped to Snapshot for Development"
          git push origin HEAD:$GITHUB_REF --follow-tags --tags

  integration-tests:
    needs: prepare
    name: Java ${{ matrix.java }}, MySQL ${{ matrix.mysql }}, MariaDB ${{ matrix.mariadb }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [8, 11, 17]
        mysql: [5.7, 8]
        mariadb: [10]
    steps:
      - uses: actions/checkout@v2

      - name: Install Perl modules
        uses: perl-actions/install-with-cpanm@v1
        with:
          install: |
            DBD::mysql

      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v2
        with:
          java-version: ${{ matrix.java }}
          distribution: 'temurin'
          cache: 'maven'

      - id: determine_version
        name: Determine Tag Version
        shell: bash
        run: |
          INPUT_VERSION=${{ github.event.inputs.version }}
          DEFAULT_VERSION=$(./mvnw -B -q help:evaluate -Dexpression=liquibase.version -DforceStdout)
          echo "::set-output name=version::${INPUT_VERSION:-$DEFAULT_VERSION}"

      - name: Checkout Tag
        shell: bash
        run: |
          git checkout liquibase-percona-$VERSION
          git reset --hard
        env:
          VERSION: ${{ steps.determine_version.outputs.version }}

      - name: Test With Maven
        shell: bash
        run: ./mvnw -B clean verify --file pom.xml -Prun-its -Dmysql_image=mysql:${{ matrix.mysql }} -Dmariadb_image=mariadb:${{ matrix.mariadb }}

  draft-release:
    needs: [integration-tests]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: 'maven'

      - id: determine_version
        name: Determine Tag Version
        shell: bash
        run: |
          INPUT_VERSION=${{ github.event.inputs.version }}
          DEFAULT_VERSION=$(./mvnw -B -q help:evaluate -Dexpression=liquibase.version -DforceStdout)
          echo "::set-output name=version::${INPUT_VERSION:-$DEFAULT_VERSION}"

      - name: Checkout Tag
        shell: bash
        run: |
          git checkout liquibase-percona-$VERSION
          git reset --hard
        env:
          VERSION: ${{ steps.determine_version.outputs.version }}

      - name: Build With Maven
        run: ./mvnw -B clean package -Dmaven.test.skip -Dpmd.skip -Dcpd.skip -Dspotbugs.skip --file pom.xml

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          name: v${{ steps.determine_version.outputs.version }}
          tag_name: liquibase-percona-${{ steps.determine_version.outputs.version }}
          draft: true
          body: Support for Liquibase ${{ steps.determine_version.outputs.version }}.
          files: target/liquibase-percona-*.jar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

